//*****************************************************************************
//
// CPE 329-11
// Spring 2017
// Final Project - Visual Equalizer
// 
// June 8, 2017
//
// Andrew Yoder
// Carlos Hernandez
//
//****************************************************************************

#include "msp.h"


void equalizer_init(void);
void lcd_init(void);


void main(void)
{
	
    WDTCTL = WDTPW | WDTHOLD;           // Stop watchdog timer
	
}



void equalizer_init(void) {

    // MCLK from P4.3
    P4->DIR |= BIT3;
    P4->SEL1 &= ~BIT3;
    P4->SEL0 |= BIT3;

    // rst from P2.6
    P2->DIR |= BIT6;

    // vref from P5.6
    P5->SEL1 |= BIT6;
    P5->SEL0 |= BIT6;

    // analog out to P6.0
    P6->DIR &= ~BIT0;
    P6->SEL1 |= BIT0;
    P6->SEL0 |= BIT0;

    // strobe from TA0.2, P2.5
    P2->DIR |= BIT5;
    P2->SEL1 &= ~BIT5;
    P2->SEL0 |= BIT5;
}

void lcd_init(void) {

    // lcd_sce from P5.0
    P5->DIR |= BIT0;
    P5->OUT |= BIT0;   // active low, so set
    P5->SEL1 &= ~BIT0;
    P5->SEL0 &= ~BIT0;

    // lcd_rst from P2.4
    P2->DIR |= BIT4;
    P2->SEL1 &= ~BIT4;
    P2->SEL0 &= ~BIT4;

    // lcd_dc from P5.2
    P5->DIR |= BIT2;
    P5->OUT &= ~BIT2;   // command low, data high
    P5->SEL1 &= ~BIT2;
    P5->SEL0 &= ~BIT2;

    // sclk from P1.5
    // direction controlled by eUSCI_B0 module
    P1->SEL1 &= ~BIT5;
    P1->SEL0 |= BIT5;

    // SIMO from SOMI, P1.7
    // direction controlled by eUSCI_B0 module
    P1->SEL1 &= ~BIT7;
    P1->SEL0 |= BIT7;
}
